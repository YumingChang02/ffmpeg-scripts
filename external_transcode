#!/bin/bash
EXPECTED_ARGS=3
ARGC=$#

if [ $ARGC -eq $EXPECTED_ARGS ]; then
    output_path="${3}"
else
    if [ $ARGC -lt $EXPECTED_ARGS ]; then
        output_path="$(pwd)"
    fi
fi

random_suffix=$( echo $RANDOM | md5sum | head -c 20 )
file_name=$( basename "${1}" )
FORMAT=$(mediainfo --Inform="Video;%Format%" "${1}")
echo "Transcoding ${1} from format $FORMAT with quality ${2} to h265; tempfile : /tmp/temp_$random_suffix.mp4; Output Path : $output_path"

if [[ $FORMAT =~ "HEVC" ]]; then
    echo "File : ${1} already in HEVC format, skipping ..."
    mv "${1}" "$output_path/$file_name"
else
    #flock -x /tmp/.gpu-transcode.lock
    ffmpeg -y -loglevel error -stats -hwaccel vaapi -hwaccel_device /dev/dri/renderD128 -hwaccel_output_format vaapi -i "${1}" -c:v hevc_vaapi -rc_mode ICQ -global_quality "${2}" /tmp/temp_"$random_suffix".mp4 # no look_ahead
    status=$?
    if [ $status -eq 0 ]; then
        if [[ $(stat -c%s /tmp/temp_$random_suffix.mp4) -ge $(stat -c%s "${1}") ]]; then
            du -sh "${1}" && du -sh /tmp/temp_"$random_suffix".mp4
            flock -x /tmp/.cpu-transcode.lock ffmpeg -y -stats -xerror -loglevel error -hwaccel vaapi -hwaccel_device /dev/dri/renderD128 -hwaccel_output_format vaapi -i "${1}" -vf 'hwdownload,format=nv12' -c:v libx265 -crf "${2}" /tmp/temp_"$random_suffix".mp4
            status=$?
            if [ $status -ne 0 ]; then
                echo "${1}" >> /home/markchang/failed.log && rm -v /tmp/temp_"$random_suffix".mp4 "${1}"
                exit 0
            fi
        fi
        echo "${1}" >> /tmp/success.log
        du -sh "${1}" && du -sh /tmp/temp_"$random_suffix".mp4 && rm "${1}" && mv -v /tmp/temp_"$random_suffix".mp4 "$output_path/${file_name%.*}.mp4"
    else
        #flock -x /tmp/.cpu-transcode.lock
        ffmpeg -y -loglevel error -stats -vaapi_device /dev/dri/renderD128 -i "${1}" -vf 'format=nv12,hwupload' -c:v hevc_vaapi -rc_mode ICQ -global_quality "${2}" /tmp/temp_"$random_suffix".mp4 # no look_ahead
        status=$?
        if [ $status -eq 0 ]; then
            if [[ $(stat -c%s /tmp/temp_$random_suffix.mp4) -ge $(stat -c%s "${1}") ]]; then
                du -sh "${1}" && du -sh /tmp/temp_"$random_suffix".mp4
                flock -x /tmp/.cpu-transcode.lock ffmpeg -y -stats -xerror -loglevel error -i "${1}" -vcodec libx265 -crf "${2}" /tmp/temp_"$random_suffix".mp4
                status=$?
                if [ $status -ne 0 ]; then
                    echo "${1}" >> /home/markchang/failed.log && rm -v /tmp/temp_"$random_suffix".mp4 "${1}"
                    exit 0
                fi
            fi
            echo "${1}" >> /tmp/success.log
            du -sh "${1}" && du -sh /tmp/temp_"$random_suffix".mp4 && rm "${1}" && mv -v /tmp/temp_"$random_suffix".mp4 "$output_path/${file_name%.*}.mp4"
        else
            echo "${1}" >> /home/markchang/failed.log && rm -v /tmp/temp_"$random_suffix".mp4 "${1}"
        fi
    fi
fi
